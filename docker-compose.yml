version: '3.8'

services:
  # MySQL Database
  db:
    image: mysql:8.0
    container_name: ecommerce_db
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_USER: ${DB_USERNAME}
    volumes:
      - db_data:/var/lib/mysql
      - ./docker/mysql/my.cnf:/etc/mysql/conf.d/my.cnf
    ports:
      - "3306:3306"
    networks:
      - laravel

  # PHP Service
  app:
    build:
      context: .
      dockerfile: docker/php/Dockerfile
    container_name: ecommerce_app
    restart: unless-stopped
    tty: true
    environment:
      SERVICE_NAME: app
      SERVICE_TAGS: dev
    working_dir: /var/www/html
    volumes:
      - ./src:/var/www/html
    networks:
      - laravel

  # Nginx Service for User Site
  user_web:
    image: nginx:alpine
    container_name: ecommerce_user_web
    restart: unless-stopped
    tty: true
    ports:
      - "8080:80"
    volumes:
      - ./src:/var/www/html
      - ./docker/nginx/user-site.conf:/etc/nginx/conf.d/default.conf
    networks:
      - laravel

  # Nginx Service for Admin Site
  admin_web:
    image: nginx:alpine
    container_name: ecommerce_admin_web
    restart: unless-stopped
    tty: true
    ports:
      - "8081:80"
    volumes:
      - ./src:/var/www/html
      - ./docker/nginx/admin-site.conf:/etc/nginx/conf.d/default.conf
    networks:
      - laravel

  # Composer Service
  composer:
    image: composer:latest
    container_name: ecommerce_composer
    volumes:
      - ./src:/var/www/html
    working_dir: /var/www/html
    networks:
      - laravel

networks:
  laravel:
    driver: bridge

volumes:
  db_data:
    driver: local